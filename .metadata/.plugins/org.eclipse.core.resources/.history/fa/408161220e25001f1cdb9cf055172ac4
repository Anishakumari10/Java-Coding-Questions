package StreamsPackage;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Employee {

	public String name;
	public long salary;
	public String department;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public long getSalary() {
		return salary;
	}

	public void setSalary(long salary) {
		this.salary = salary;
	}

	public String getDepartment() {
		return department;
	}

	public void setDepartment(String department) {
		this.department = department;
	}

	public Employee(String name, long salary, String department) {
		super();
		this.name = name;
		this.salary = salary;
		this.department = department;
	}

	

	public static void main(String[] args) {

//		int[] a = { 1, 3, 4, 1, 2, 4, 5, 9 };
//
//		List<Integer> list = Arrays.stream(a).boxed().collect(Collectors.toList());
//		list.stream().filter(i -> Collections.frequency(list, i) > 1).distinct().forEach(System.out::println);

		List<Employee> employees = new ArrayList<>();
		employees.add(new Employee("Vikas", 100000, "ISE"));
		employees.add(new Employee("Jane ", 50000, "CSE"));
		employees.add(new Employee("Bob", 900000, "CIVIL"));
		employees.add(new Employee("Sarah", 893832, "ECE"));
		
		employees.stream().map(Employee:: getName).sorted().forEach(System.out::println);
		
		employees.stream().sorted(Comparator.comparingLong(Employee:: getSalary).reversed()).forEach(System.out::println);

	}

}
