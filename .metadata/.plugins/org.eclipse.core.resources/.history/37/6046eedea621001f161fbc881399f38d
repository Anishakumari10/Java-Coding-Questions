package com.angular.spring.webservice.com.restful_web_service.todo;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

@CrossOrigin("http://localhost:4200/")
@RestController
public class TodoResourceController {

	@Autowired
	private TodoService todoServie;

	@GetMapping("/users/{username}/getAllTodo")
	public List<Todo> getAllTodos(@PathVariable String username) {

		return todoServie.findAll();
	}

	@GetMapping("/users/{username}/todo/{id}")
	public Todo getTodoById(@PathVariable Long id) {
		return todoServie.findById(id);
	}

	@DeleteMapping("users/{username}/{id}")
	public ResponseEntity<Void> deleteTodo(@PathVariable String username, @PathVariable Long id) {
		Todo todo = todoServie.deleteById(id);
		if (todo != null) {
			return ResponseEntity.noContent().build();
		} else
			return ResponseEntity.notFound().build();
	}

	@PutMapping("users/{username}/updateTodo/{id}")
	public ResponseEntity<Todo> UpdateTodo(@PathVariable Long id, @PathVariable String username,
			@RequestBody Todo todo) {
		Todo updatetodo = todoServie.saveTodo(todo);
		return new ResponseEntity<Todo>(updatetodo, HttpStatus.OK);
	}

	@PostMapping("users/{username}/createTodo/")
	public ResponseEntity<Void> createTodo(@PathVariable String username, @RequestBody Todo todo) {
		Todo createdTodo = todoServie.saveTodo(todo);

		URI uri = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}").buildAndExpand(createdTodo.getId())
				.toUri();

		return ResponseEntity.created(uri).build();
	}
}
